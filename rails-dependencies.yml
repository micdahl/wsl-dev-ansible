---
- name: "Install rails development environment"
  hosts: localhost
  connection: local
  become: false
  tasks:
    - name: "Checkout rbenv"
      ansible.builtin.shell:
        cmd: "git clone https://github.com/rbenv/rbenv.git {{ ansible_env.HOME }}/.rbenv"
        creates: "{{ ansible_env.HOME }}/.rbenv"

    - name: "Create Plugins Path"
      file:
        path: "{{ ansible_env.HOME }}/.rbenv/plugins"
        state: directory

    - name: "Checkout ruby-build"
      ansible.builtin.shell:
        cmd: "git clone https://github.com/rbenv/ruby-build.git {{ ansible_env.HOME }}/.rbenv/plugins/ruby-build"
        creates: "{{ ansible_env.HOME }}/.rbenv/plugins/ruby-build"

    - name: "Install gem dependencies"
      become: true
      become_method: sudo
      ansible.builtin.apt:
        state: present
        update_cache: yes
        pkg:
          - libffi-dev
          - libglib2.0-dev

    - name: "Install nvm"
      ansible.builtin.shell:
        cmd: "curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/master/install.sh | bash"
        creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"

    - name: "Install bass"
      ansible.builtin.shell:
        cmd: fish -c 'fisher install edc/bass'
        creates: "{{ ansible_env.HOME }}/.config/fish/functions/__bass.py"

    - name: "Add nvm function to fish"
      copy:
        dest: "{{ ansible_env.HOME }}/.config/fish/functions/nvm.fish"
        content: |
          function nvm
            bass source ~/.nvm/nvm.sh --no-use ';' nvm $argv
          end

    - name: "Install node.js lts release"
      ansible.builtin.shell:
        cmd: fish -c 'nvm install --lts'
        creates: "{{ ansible_env.HOME }}/.nvm/versions/node"

    - name: "Install python 2.7"
      become: true
      become_method: sudo
      ansible.builtin.apt:
        name: python2.7
        state: present
        update_cache: yes

    - name: "Install google chrome package"
      become: true
      become_method: sudo
      ansible.builtin.apt:
        deb: "https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"
        state: present

    - name: "Download chromedriver"
      ansible.builtin.shell:
        cmd: curl -o {{ ansible_env.HOME }}/downloads/chromedriver.zip https://chromedriver.storage.googleapis.com/$(curl https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$(google-chrome --version | egrep -o "[0-9]{3}" | egrep -m 1 -o "[0-9]{3}"))/chromedriver_linux64.zip
        creates: "{{ ansible_env.HOME }}/downloads/chromedriver.zip"

    - name: "Install unzip"
      become: true
      become_method: sudo
      ansible.builtin.apt:
        state: present
        name: unzip
        update_cache: yes

    - name: "Unpack"
      ansible.builtin.unarchive:
        src: "{{ ansible_env.HOME }}/downloads/chromedriver.zip"
        dest: "{{ ansible_env.HOME }}/.local/bin"
        creates: "{{ ansible_env.HOME }}/.local/bin/chromedriver"

    - name: "Install ImageMagick"
      become: true
      become_method: sudo
      ansible.builtin.apt:
        name: imagemagick
        state: present

    - name: "Install Poppler Utils for pdf preview"
      become: true
      become_method: sudo
      ansible.builtin.apt:
        name: poppler-utils
        state: present

    - name: "Install ruby 2.6.6 dependencies"
      become: true
      become_method: sudo
      ansible.builtin.apt:
        name: libreadline-dev
        state: present

    - name: "Install ruby 2.6.6"
      ansible.builtin.shell:
        cmd: rbenv install 2.6.6
        creates: "{{ ansible_env.HOME }}/.rbenv/versions/2.6.6"

    - name: "Get current ruby version"
      shell: "cat {{ ansible_env.HOME }}/.rbenv/version"
      register: file_contents

    - name: "Activate ruby 2.6.6"
      ansible.builtin.shell:
        cmd: fish -i -c 'rbenv global 2.6.6'
      when: file_contents.stdout != '2.6.6'

    - name: "Install rails 6.1.7"
      ansible.builtin.shell:
        cmd: fish -i -c 'rbenv shell 2.6.6 && gem install rails -v 6.1.7'
        creates: "{{ ansible_env.HOME }}/.rbenv/versions/2.6.6/bin/rails"

    - name: "Install mailcatcher"
      ansible.builtin.shell:
        cmd: fish -i -c 'rbenv shell 2.6.6 && gem install mailcatcher'
        creates: "{{ ansible_env.HOME }}/.rbenv/versions/2.6.6/bin/mailcatcher"

    - name: "Enable corepack"
      ansible.builtin.shell:
        cmd: fish -i -c 'nvm use --lts && corepack enable'

    - name: "Install localtunnel"
      community.general.npm:
        name: localtunnel
        global: true
