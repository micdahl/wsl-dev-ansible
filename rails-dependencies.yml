---
- name: "Install rails development environment"
  hosts: localhost
  connection: local
  become: false
  tasks:
    - name: "Install dependencies"
      become: true
      become_method: sudo
      community.general.pacman:
        name: 
          - base-devel
          - git
          - imagemagick
          - openslide
          - libheif
          - libjxl
          - libvips
          - unzip
        extra_args: "--needed"
        update_cache: yes
          
    - name: "Checkout rbenv"
      ansible.builtin.shell:
        cmd: "git clone https://github.com/rbenv/rbenv.git {{ ansible_env.HOME }}/.rbenv"
        creates: "{{ ansible_env.HOME }}/.rbenv"

    - name: "Create Plugins Path"
      file:
        path: "{{ ansible_env.HOME }}/.rbenv/plugins"
        state: directory

    - name: "Checkout ruby-build"
      ansible.builtin.shell:
        cmd: "git clone https://github.com/rbenv/ruby-build.git {{ ansible_env.HOME }}/.rbenv/plugins/ruby-build"
        creates: "{{ ansible_env.HOME }}/.rbenv/plugins/ruby-build"

    - name: "Download google chrome rep"
      ansible.builtin.git:
        repo: "https://aur.archlinux.org/google-chrome.git"
        dest:  "{{ ansible_env.HOME }}/downloads/google-chrome"

    - name: "Build and install google chrome package"
      ansible.builtin.shell:
        cmd: makepkg -is --noconfirm
        chdir: "{{ ansible_env.HOME }}/downloads/google-chrome"

    - name: "Download chromedriver"
      ansible.builtin.shell:
        cmd: curl -o {{ ansible_env.HOME }}/downloads/chromedriver.zip https://chromedriver.storage.googleapis.com/$(curl https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$(google-chrome-stable --version | grep -E -o "[0-9]{3}" | grep -E -m 1 -o "[0-9]{3}"))/chromedriver_linux64.zip
        creates: "{{ ansible_env.HOME }}/downloads/chromedriver.zip"

    - name: "Unpack"
      ansible.builtin.unarchive:
        src: "{{ ansible_env.HOME }}/downloads/chromedriver.zip"
        dest: "{{ ansible_env.HOME }}/.local/bin"
        creates: "{{ ansible_env.HOME }}/.local/bin/chromedriver"

    - name: "Install ruby 3.1.3"
      ansible.builtin.shell:
        cmd: rbenv install 3.1.3
        creates: "{{ ansible_env.HOME }}/.rbenv/versions/3.1.3"

    - name: "Check for version"
      stat:
        path: "{{ ansible_env.HOME }}/.rbenv/version"
      register: version_exists

    - name: "Activate ruby 3.1.3"
      ansible.builtin.shell:
        cmd: fish -i -c 'rbenv global 3.1.3'
      when: not version_exists.stat.exists

    - name: "Get current ruby version"
      shell: "cat {{ ansible_env.HOME }}/.rbenv/version"
      register: file_contents

    - name: "Activate ruby 3.1.3"
      ansible.builtin.shell:
        cmd: fish -i -c 'rbenv global 3.1.3'
      when: file_contents.stdout != '3.1.3'

    - name: "Install rails 7.0.4"
      ansible.builtin.shell:
        cmd: fish -i -c 'rbenv shell 3.1.3 && gem install rails -v 7.0.4'
        creates: "{{ ansible_env.HOME }}/.rbenv/versions/3.1.3/bin/rails"

    - name: "Install mailcatcher"
      ansible.builtin.shell:
        cmd: fish -i -c 'rbenv shell 3.1.3 && gem install mailcatcher'
        creates: "{{ ansible_env.HOME }}/.rbenv/versions/3.1.3/bin/mailcatcher"

    - name: "Enable corepack"
      ansible.builtin.shell:
        cmd: fish -i -c 'nvm use --lts && corepack enable'

    - name: "Install localtunnel"
      community.general.npm:
        name: localtunnel
        global: true
